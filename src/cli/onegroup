#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

ONE_LOCATION=ENV["ONE_LOCATION"]

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby"
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby"
end

$: << RUBY_LIB_LOCATION
$: << RUBY_LIB_LOCATION+"/cli"

require 'command_parser'
require 'one_helper/onegroup_helper'

cmd=CommandParser::CmdParser.new(ARGV) do
    usage "`onegroup` <command> [<args>] [<options>]"
    version OpenNebulaHelper::ONE_VERSION

    helper = OneGroupHelper.new

    ########################################################################
    # Global Options
    ########################################################################
    set :option, CommandParser::OPTIONS

    list_options = CLIHelper::OPTIONS
    list_options << OpenNebulaHelper::XML
    list_options << OpenNebulaHelper::NUMERIC

    ########################################################################
    # Formatters for arguments
    ########################################################################
    set :format, :groupid, OneGroupHelper.to_id_desc do |arg|
        helper.to_id(arg)
    end

    set :format, :groupid_list, OneGroupHelper.list_to_id_desc do |arg|
        helper.list_to_id(arg)
    end

    ########################################################################
    # Commands
    ########################################################################

    create_desc = <<-EOT.unindent
        Creates a new Group
    EOT

    command :create, create_desc, :name do
        helper.create_resource(options) do |group|
            group.allocate(args[0])
        end
    end

    delete_desc = <<-EOT.unindent
        Deletes the given Group
    EOT

    command :delete, delete_desc, [:range, :groupid_list] do
        helper.perform_actions(args[0],options,"deleted") do |obj|
            obj.delete
        end
    end

    list_desc = <<-EOT.unindent
        Lists Groups in the pool
    EOT

    command :list, list_desc, :options=>list_options do
        helper.list_pool(options)
    end

    show_desc = <<-EOT.unindent
        Shows information for the given Group
    EOT

    command :show, show_desc,[:groupid, nil], :options=>OpenNebulaHelper::XML do
        group = args[0] || OpenNebula::Group::SELF
        helper.show_resource(group,options)
    end

end
