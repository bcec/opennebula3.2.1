#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

ONE_LOCATION=ENV["ONE_LOCATION"]

if !ONE_LOCATION
    RUBY_LIB_LOCATION="/usr/lib/one/ruby"
    ETC_LOCATION="/etc/one/"
else
    RUBY_LIB_LOCATION=ONE_LOCATION+"/lib/ruby"
    ETC_LOCATION=ONE_LOCATION+"/etc/"
end

$: << RUBY_LIB_LOCATION

require 'scripts_common'
require 'OpenNebula'
require 'quota'

user_id = ARGV.shift

overall_evalutation = ARGV.pop
exit -1 if overall_evalutation.to_i == 0

quota = Quota.new

#q = {
#    :cpu => 10,
#    :memory => 2048,
#    :storage => 100000,
#    :num_vms => 5
#}
#
#quota.set(1, q)
#OpenNebula.log_debug("quotas: #{quota.get(1)}")

ARGV.each {|request|
    obj, template_or_id, op, owner, acl_eval = request.split(':')

    if ( obj == "TEMPLATE" && op == "USE" && ARGV.size == 1 )
        rc = false
    else
        rc = quota.authorize(user_id, request)
    end
    
    if rc
        OpenNebula.error_message rc
        exit -1
    end
}

#OpenNebula.log_debug("AUTHORIZE ARGS: #{ARGV.join(' ')}")

exit 0